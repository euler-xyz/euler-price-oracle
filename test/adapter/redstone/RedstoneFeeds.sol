// SPDX-License-Identifier: GPL-2.0-or-later
pragma solidity 0.8.23;

bytes32 constant REDSTONE_VST_USD_FEED = bytes32("VST");
bytes32 constant REDSTONE_USDC_USD_FEED = bytes32("USDC");
bytes32 constant REDSTONE_USDT_USD_FEED = bytes32("USDT");
bytes32 constant REDSTONE_BTC_USD_FEED = bytes32("BTC");
bytes32 constant REDSTONE_DAI_USD_FEED = bytes32("DAI");
bytes32 constant REDSTONE_FXS_USD_FEED = bytes32("FXS");
bytes32 constant REDSTONE_FRAX_USD_FEED = bytes32("FRAX");
bytes32 constant REDSTONE_ETH_USD_FEED = bytes32("ETH");
bytes32 constant REDSTONE_STETH_USD_FEED = bytes32("stETH");
bytes32 constant REDSTONE_STETH_ETH_FEED = bytes32("stETH/ETH");
bytes32 constant REDSTONE_WSTETH_USD_FEED = bytes32("wstETH");
bytes32 constant REDSTONE_WSTETH_ETH_FEED = bytes32("wstETH/ETH");
bytes32 constant REDSTONE_WSTETH_FUNDAMENTAL_FEED = bytes32("wstETH_FUNDAMENTAL");
bytes32 constant REDSTONE_WSTETH_STETH_FEED = bytes32("wstETH/stETH");
bytes32 constant REDSTONE_SWETH_USD_FEED = bytes32("SWETH");
bytes32 constant REDSTONE_SWETH_ETH_FEED = bytes32("SWETH_ETH");
bytes32 constant REDSTONE_3CRV_USD_FEED = bytes32("3Crv");
bytes32 constant REDSTONE_LUSD_USD_FEED = bytes32("LUSD");
bytes32 constant REDSTONE_GHO_USD_FEED = bytes32("GHO");
bytes32 constant REDSTONE_AAVE_USD_FEED = bytes32("AAVE");
bytes32 constant REDSTONE_USDC_USDT_FEED = bytes32("USDC.USDT");
bytes32 constant REDSTONE_USDC_DAI_FEED = bytes32("USDC.DAI");
bytes32 constant REDSTONE_TRX_USD_FEED = bytes32("TRX");
bytes32 constant REDSTONE_PREMIA_USD_FEED = bytes32("PREMIA");
bytes32 constant REDSTONE_MNT_USD_FEED = bytes32("MNT");
bytes32 constant REDSTONE_TLOS_USD_FEED = bytes32("TLOS");
bytes32 constant REDSTONE_ETHX_USD_FEED = bytes32("ETHx");
bytes32 constant REDSTONE_ETHX_ETH_FEED = bytes32("ETHx/ETH");
bytes32 constant REDSTONE_TIA_USD_FEED = bytes32("TIA");
bytes32 constant REDSTONE_WEETH_USD_FEED = bytes32("weETH");
bytes32 constant REDSTONE_WEETH_ETH_FEED = bytes32("weETH/ETH");
bytes32 constant REDSTONE_WEETH_FUNDAMENTAL_FEED = bytes32("weETH_FUNDAMENTAL");
bytes32 constant REDSTONE_RETH_USD_FEED = bytes32("rETH");
bytes32 constant REDSTONE_RETH_ETH_FEED = bytes32("rETH/ETH");
bytes32 constant REDSTONE_OSETH_USD_FEED = bytes32("osETH");
bytes32 constant REDSTONE_OSETH_ETH_FEED = bytes32("osETH/ETH");
bytes32 constant REDSTONE_PXETH_USD_FEED = bytes32("pxETH");
bytes32 constant REDSTONE_PXETH_ETH_FEED = bytes32("pxETH/ETH");
bytes32 constant REDSTONE_APXETH_USD_FEED = bytes32("apxETH");
bytes32 constant REDSTONE_APXETH_ETH_FEED = bytes32("apxETH/ETH");
bytes32 constant REDSTONE_ARB_USD_FEED = bytes32("ARB");
bytes32 constant REDSTONE_OP_USD_FEED = bytes32("OP");
bytes32 constant REDSTONE_CELO_USD_FEED = bytes32("CELO");
bytes32 constant REDSTONE_BRL_USD_FEED = bytes32("BRL");
bytes32 constant REDSTONE_EUR_USD_FEED = bytes32("EUR");
bytes32 constant REDSTONE_CELO_EUR_FEED = bytes32("CELO/EUR");
bytes32 constant REDSTONE_CELO_BRL_FEED = bytes32("CELO/BRL");
bytes32 constant REDSTONE_USDC_EUR_FEED = bytes32("USDC/EUR");
bytes32 constant REDSTONE_USDC_BRL_FEED = bytes32("USDC/BRL");
bytes32 constant REDSTONE_EUROC_USD_FEED = bytes32("EUROC");
bytes32 constant REDSTONE_EUROC_EUR_FEED = bytes32("EUROC/EUR");
bytes32 constant REDSTONE_AVAX_USD_FEED = bytes32("AVAX");
bytes32 constant REDSTONE_CRVFRAX_USD_FEED = bytes32("crvFRAX");
bytes32 constant REDSTONE_ALUSD_USD_FEED = bytes32("ALUSD");
bytes32 constant REDSTONE_ETH_USDC_FEED = bytes32("ETH/USDC");
bytes32 constant REDSTONE_ATOM_USD_FEED = bytes32("ATOM");
bytes32 constant REDSTONE_CANTO_USD_FEED = bytes32("CANTO");
bytes32 constant REDSTONE_XAU_USD_FEED = bytes32("XAU");
bytes32 constant REDSTONE_XRP_USD_FEED = bytes32("XRP");
bytes32 constant REDSTONE_SOL_USD_FEED = bytes32("SOL");
bytes32 constant REDSTONE_AGEUR_USD_FEED = bytes32("agEUR");
bytes32 constant REDSTONE_XVS_USD_FEED = bytes32("XVC");
bytes32 constant REDSTONE_WBTC_USD_FEED = bytes32("WBTC");
bytes32 constant REDSTONE_UNI_USD_FEED = bytes32("UNI");
bytes32 constant REDSTONE_LINK_USD_FEED = bytes32("LINK");
bytes32 constant REDSTONE_CRV_USD_FEED = bytes32("CRV");
bytes32 constant REDSTONE_MKR_USD_FEED = bytes32("MKR");
bytes32 constant REDSTONE_APE_USD_FEED = bytes32("APE");
bytes32 constant REDSTONE_CVX_USD_FEED = bytes32("CVX");
bytes32 constant REDSTONE_USDM_USD_FEED = bytes32("USDM");
bytes32 constant REDSTONE_WUSDM_USD_FEED = bytes32("wUSDM");
bytes32 constant REDSTONE_MANTA_USD_FEED = bytes32("MANTA");
bytes32 constant REDSTONE_STONE_USD_FEED = bytes32("STONE");
bytes32 constant REDSTONE_FRXETH_USD_FEED = bytes32("frxETH");
bytes32 constant REDSTONE_EUSD_USD_FEED = bytes32("eUSD");
bytes32 constant REDSTONE_RSR_USD_FEED = bytes32("RSR");
bytes32 constant REDSTONE_ETHPLUS_USD_FEED = bytes32("ETH+");
bytes32 constant REDSTONE_SDAI_USD_FEED = bytes32("sDAI");
bytes32 constant REDSTONE_NOTE_USD_FEED = bytes32("NOTE");
bytes32 constant REDSTONE_CNOTE_USD_FEED = bytes32("cNOTE");
bytes32 constant REDSTONE_LABM_USD_FEED = bytes32("LAB.m");
bytes32 constant REDSTONE_TON_USD_FEED = bytes32("TON");
bytes32 constant REDSTONE_XTZ_USD_FEED = bytes32("XTZ");
bytes32 constant REDSTONE_GBP_USD_FEED = bytes32("GBP");
bytes32 constant REDSTONE_SFRXETH_USD_FEED = bytes32("sfrxETH");
bytes32 constant REDSTONE_RSETH_USD_FEED = bytes32("rsETH");
bytes32 constant REDSTONE_RSETH_ETH_FEED = bytes32("rsETH/ETH");
bytes32 constant REDSTONE_EZETH_USD_FEED = bytes32("ezETH");
bytes32 constant REDSTONE_EZETH_ETH_FEED = bytes32("ezETH/ETH");
bytes32 constant REDSTONE_CRVUSD_USD_FEED = bytes32("crvUSD");
bytes32 constant REDSTONE_USDE_USD_FEED = bytes32("USDe");
bytes32 constant REDSTONE_SUSDE_USD_FEED = bytes32("sUSDe");
bytes32 constant REDSTONE_USDB_USD_FEED = bytes32("USDB");
bytes32 constant REDSTONE_RSWETH_USD_FEED = bytes32("rswETH");
bytes32 constant REDSTONE_RSWETH_ETH_FEED = bytes32("rswETH/ETH");
